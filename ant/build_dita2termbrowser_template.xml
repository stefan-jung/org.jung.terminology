<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:dita="http://dita-ot.sourceforge.net" xmlns:if="ant:if" xmlns:unless="ant:unless">

    <!-- 
        WORKAROUND: It is mandatory to call init-properties here.
        Otherwise, the dita.temp.dir property would not be available
        in the generate-termstats and semanticnet target
        on some Linux OSes when using DITA-OT 2.4.3+
    -->
    <target name="dita2termbrowser-responsive"
        depends="init-properties,
                 -is-webhelp-responsive-available,
                 callwebhelp
                 ">
    </target>
    
    <!-- 
        This is not very elegant, but we cannot simply call dita2webhelp-responsive
        as a dependency, because it does not exist in the DITA-OT, only in the 
        Oxygen XML Publishing Engine. The "depends" attribute of this target calls
        all dependency targets from the dita2webhelp-responsive target, which is stored in
        com.oxygenxml.webhelp.responsive\build_dita.xml, manually. The only difference is,
        that we call "generate-termstats" after the preprocess.
    -->
    <target name="callwebhelp" if="dita.plugin.com.oxygenxml.webhelp.responsive.dir" depends="
        whr-init,
        preprocess,
        generate-termstats,
        html5.init,
        html5.image-metadata,
        whr-detect-lang,
        whr-collect-indexterms,
        whr-create-props-file,
        whr-toc-xml,
        whr-nav-links,
        whr-context-help-map,
        whr-sitemap,
        whr-copy-resources,
        html5.css,
        whr-clean-css,
        dita.topics.html.common,
        whr-create-topic-pages,
        whr-create-main-files,
        whr-search-index
        "/>
    
    <!--
        Check the availability of the plugin by checking the property.
        We cannot make this a hard dependency in the plugin.xml,
        otherwise the plugin might not work in specific environments.
    -->
    <target name="-is-webhelp-responsive-available">
        <fail unless:set="dita.plugin.com.oxygenxml.webhelp.responsive.dir">com.oxygenxml.webhelp.responsive not found. You cannot use the termbrowser</fail>
        <echo if:set="dita.plugin.com.oxygenxml.webhelp.responsive.dir">com.oxygenxml.webhelp.responsive found</echo>
    </target>

    <!-- 
        Helper target to determine if terminology statistics should be generated.
        This target is looking for a &lt;termstatsref&gt; element on the terminology map.
        The property "generate-termstats" can also be set manually. This could make sense,
        for example, if the user has extended the transtype "termbrowser-responsive",
        so the transtype is no longer "termbrowser-responsive" and the condition of this
        target will not be met.
    -->
    <target name="-generate-termstats">
        <property if:set="args.term.containermap" name="termmap" value="${args.term.containermap}"/>
        <property unless:set="args.term.containermap" name="termmap" value="${args.input}"/>
        <basename property="basename" file="${args.input}" suffix=".ditamap"/>
        <basename property="termmap.basename" file="${termmap}" suffix=".ditamap"/>
        <echo level="info">termmap = "${termmap}"</echo>

        <!-- Check if the <termmap> contains a <termstatsref> element -->
        <loadfile property="termstatsref" srcfile="${dita.temp.dir}${file.separator}${termmap.basename}.ditamap">
            <filterchain>       
                <linecontainsregexp>          
                    <regexp pattern="termmap/termstatsref "/>        
                </linecontainsregexp>      
            </filterchain> 
        </loadfile>
        <echo if:set="termstatsref">&lt;termstatsref> element found</echo>
        <echo unless:set="termstatsref">&lt;termstatsref> element not found</echo>

        <!-- We must not set the property 'generate-termstats' to 'false', otherwise the 'generate-termstats' target is always triggered. -->
        <condition unless:set="generate-termstats" property="generate-termstats" value="true">
            <and>
                <equals arg1="${transtype}" arg2="termbrowser-responsive"/>
                <isset property="termstatsref"/>
            </and>
        </condition>
        <echo if:set="generate-termstats" level="info">Generate terminology statistics: ${generate-termstats}</echo>
        <echo unless:set="generate-termstats" level="info">Generate terminology statistics: false</echo>
    </target>
    
    <target name="generate-termstats"
        description="Generate terminology statistics."
        depends="-generate-termstats"
        if="generate-termstats">
        
<!--        <property if:set="args.term.containermap" name="termmap" value="${args.term.containermap}"/>
        <property unless:set="args.term.containermap" name="termmap" value="${args.input}"/>
        <basename property="basename" file="${args.input}" suffix=".ditamap"/>
        <basename property="termmap.basename" file="${termmap}" suffix=".ditamap"/>
        
        <echo level="info">termmap = "${termmap}"</echo>-->
        
        
        <property name="dita.temp.dir.abs" location="${dita.temp.dir}"/>
        <makeurl file="${dita.temp.dir.abs}" property="dita.temp.dir.abs.url"/>
        <property name="dita.map.rel" value="${dita.temp.dir}${file.separator}${termmap.basename}.ditamap" relative="no"/>
        
        <!-- Convert terminology statistics to termstats XML -->
        <xslt basedir="${dita.temp.dir}"
            destdir="${output.dir}"
            in="${dita.temp.dir}${file.separator}${termmap.basename}.ditamap"
            out="${dita.temp.dir}${file.separator}terminology_stats.xml"
            reloadstylesheet="${dita.xhtml.reloadstylesheet}"
            classpathref="dost.class.path"
            extension="_check.xml"
            style="${dita.plugin.org.jung.terminology.dir}/xsl/termbrowser/terminology-stats.xsl"
            filenameparameter="FILENAME" 
            filedirparameter="FILEDIR">
            <param name="ditamap" expression="${dita.map.rel}"/>
            <param name="ditamap.filename" expression="${basename}.ditamap"/>
            <param name="temp.dir" expression="${dita.temp.dir}"/>
            <param name="temp.dir.abs" expression="${dita.temp.dir.abs.url}"/>
            <xmlcatalog refid="dita.catalog"/>
        </xslt>
        
        
        <!-- Merge recently gathered terminology statistics with old statistics from previous builds. -->
        <echo unless:set="args.termstats">Property args.termstats is not set</echo>
        <echo if:set="args.termstats" level="info">Merge termstats files: '${args.termstats}' and '${dita.temp.dir}${file.separator}terminology_stats.xml'</echo>
        
        <condition property="termstats.http" value="true">
            <contains string="${args.termstats}" substring="http"/>
        </condition>
        <echo if:set="termstats.http">The "args.termstats" property is pointing to an external URL. Download file ...</echo>
        <echo if:set="termstats.http">  URL:    "${args.termstats}"</echo>
        <echo if:set="termstats.http">  TARGET: "${dita.temp.dir}/terminology_stats_old.xml"</echo>
        <echo if:set="termstats.http">curl --insecure ${args.termstats} -o ${dita.temp.dir}/terminology_stats_old.xml</echo>

        <!-- If "args.termstats" contains the substring "http", treat it as an external URL and try to download the termstats file. -->
        <!-- The Apache Ant get task does not work with self-signed certificates, therefore we use curl. -->
        <!--<get if:set="termstats.http" src="${args.termstats}" dest="${dita.temp.dir}/terminology_stats_old.xml"/>-->
        
        <exec if:set="termstats.http" executable="curl" errorproperty="curl.error">
            <arg line="--insecure ${args.termstats} -o ${dita.temp.dir}/terminology_stats_old.xml"/>
        </exec>
        
        
        <makeurl if:set="termstats.http" file="${dita.temp.dir}/terminology_stats_old.xml" property="old.termstats.url"/>

        <makeurl if:set="args.termstats" file="${args.termstats}" property="old.termstats.url"/>
        <makeurl if:set="args.termstats" file="${dita.temp.dir}${file.separator}terminology_stats.xml" property="new.termstats.url"/>
        <echo>old.termstats.url = "${old.termstats.url}"</echo>
        <echo>new.termstats.url = "${new.termstats.url}"</echo>
        <xslt if:set="args.termstats"
            basedir="${dita.temp.dir}"
            destdir="${dita.temp.dir}"
            in="${dita.plugin.org.jung.terminology.dir}/xsl/termbrowser/dummy.xml"
            out="${dita.temp.dir}/termstats_merged.xml"
            style="${dita.plugin.org.jung.terminology.dir}/xsl/termbrowser/terminology-stats-merge-xml.xsl">
            <param name="new.termstats" expression="${dita.temp.dir}${file.separator}terminology_stats.xml"/>
            <param name="old.termstats" expression="${old.termstats.url}"/>
            <param name="new.termstats" expression="${new.termstats.url}"/>
        </xslt>
        <move unless:set="args.termstats"
            file="${dita.temp.dir}${file.separator}terminology_stats.xml"
            tofile="${dita.temp.dir}/termstats_merged.xml">
        </move>
        <!-- Set args.default.language, if it has not yet been set. -->
        <property name="args.default.language" value="en-GB"/>
        
        
        <!--
            Convert the XML data to XHTML.
            The content of the <head> element and the <body> element
            will later be injected into the termstats topic.
        -->
        <fail>
            File ${dita.temp.dir}/termstats_merged.xml is not available
            <condition>
                <and>
                    <isset property="args.termstats"/>
                    <not>
                        <available file="${dita.temp.dir}/termstats_merged.xml"/>
                    </not>
                </and>
            </condition>
        </fail>
        
        <!--
            Copy the XML file to the output dir.
            It has to be shipped with the webhelp to be used as an input parameter for the next publication.
        -->
        <copy
            file="${dita.temp.dir}/termstats_merged.xml"
            tofile="${output.dir}/termstats.xml">
        </copy>
    </target>
    
</project>
