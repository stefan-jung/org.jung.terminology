<?xml version="1.0" encoding="UTF-8"?>
<!--
    This Apache Ant script operates on the <termmap>.
    It iterates over all <termentry> topics and generates
    a list of terms in all languages or in a specific language.
    This might be useful, if you'd like to provide a full list
    of terms in a certain languages for a translator to review.
-->
<project basedir="." name="OpenDocument Spreadsheet (ODS) Export" default="ods-export" xmlns:if="ant:if" xmlns:unless="ant:unless">


<!-- ================================================================================
     Includes
     ================================================================================ -->
    <include file="build_saxon.xml"/>
    

<!-- ================================================================================
     Imports
     ================================================================================ -->
    <import file="build_temp-dir.xml"/>
    
    
<!-- ================================================================================
     Properties
     ================================================================================ -->
    <property environment="env"/>
    <property name="debugging.mode" value="false"/>
    <condition property="dbg">
        <equals arg1="${debugging.mode}" arg2="true"/>
    </condition>
    
    
<!-- ================================================================================
     Targets
     ================================================================================ -->
    <target name="ods-export" depends="-temp.dir">
        <fail unless="termmap" message="The mandatory property 'termmap' is not set."/>
        <fail unless="main.language" message="The mandatory property 'main.language' is not set."/>
        <fail unless="term.language" message="The mandatory property 'term.language' is not set."/>
        <fail unless="export" message="The mandatory property 'export' is not set."/>
        
        <!-- Subdirectory in the  temporary directory of the terminology plugin. -->
        <property name="ods-export.temp.dir" value="${jung.terminology.temp.dir}${file.separator}ods-export"/>
        <echo if:true="${debugging.mode}" message="+ [DEBUG] ods-export.temp.dir = ${ods-export.temp.dir}"/>
        
        <!-- Delete the directory, if it exists. -->
        <delete dir="${ods-export.temp.dir}" failonerror="false"/>
        
        <!-- Create a new temporary directory. -->
        <mkdir dir="${ods-export.temp.dir}"/>
        
        <!-- In this directory we extract the ODS template and assemble the content of the ODS file. -->
        <property name="ods.dir" value="${ods-export.temp.dir}${file.separator}ods"/>
        <echo if:true="${debugging.mode}" message="+ [DEBUG] ods.dir = ${ods.dir}"/>
        <mkdir dir="${ods.dir}"/>
        
        <xslt 
            in="${termmap}"
            out="${ods.dir}${file.separator}content.xml"
            style="../xsl/ods-export/ods-export.xsl">
            <factory name="net.sf.saxon.TransformerFactoryImpl"/>
            <classpath refid="saxon"/>
            <param name="debugging.mode" expression="${debugging.mode}"/>
            <param name="main.language" expression="${main.language}"/>
            <param name="term.language" expression="${term.language}"/>
            <param name="export" expression="${export}"/>
        </xslt>
        <echo if:true="${debugging.mode}" message="+ [DEBUG] Transform terminology to '${ods-export.temp.dir}${file.separator}ods.xml'"/>
        
        <!-- Create a valid ODS file from the ODS directory. We must not compress the file -->
        <copy file="../templates/export.ods" tofile="${ods-export.temp.dir}${file.separator}export.ods"/>
        <zip destfile="${ods-export.temp.dir}${file.separator}export.ods" basedir="${ods.dir}" compress="false" update="true"/>
        <echo message="Created ODS file '${ods-export.temp.dir}${file.separator}export.ods'"/>
        
        <!-- Open file -->
        <condition property="linux">
            <os family="unix"/>
        </condition>
        <exec if:true="${linux}" executable="xdg-open">
            <arg value="${ods-export.temp.dir}${file.separator}export.ods"/>
        </exec>
        <condition property="windows">
            <os family="windows"/>
        </condition>
        <exec if:true="${windows}" executable="cmd.exe">
            <arg value="/c"/>
            <arg value="start"/>
            <!-- Empty argument for a new command window -->
            <arg value=""/>
            <arg value="${ods-export.temp.dir}${file.separator}export.ods"/>
        </exec>
        
    </target>

</project>