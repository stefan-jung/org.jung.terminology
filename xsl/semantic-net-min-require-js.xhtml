<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>

<!-- Working demo as reference: https://doctales.github.io/samples/termbrowser-responsive/semantic-net.html -->

<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>Semantic Net Test</title>
        
        <script src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.js" integrity="sha512-vRqhAr2wsn+/cSsyz80psBbCcqzz2GTuhGk3bq3dAyytz4J/8XwFqMjiAGFBj+WM95lHBJ9cDf87T3P8yMrY7A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"/>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.13.2/jquery-ui.min.js"/>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.13.2/themes/blitzer/jquery-ui.min.css" rel="stylesheet"/>
        
        <!--<script src="https://cdnjs.cloudflare.com/ajax/libs/vis-network/9.1.6/standalone/umd/vis-network.min.js"/>-->
        <link href="https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.css" rel="stylesheet"/>
        
        
        <script type="text/javascript">
            
            require(['https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js'], function() {
                require(['https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.13.2/jquery-ui.min.js'], function() {
                    require(['https://cdnjs.cloudflare.com/ajax/libs/vis-network/9.1.6/dist/vis-network.esm.min.js'], function(vis)) {
            
                        // var container = document.getElementById('visualization');
                        // var data = new vis.DataSet([
                        //     {id: 1, content: 'item 1', start: '2013-04-20'},
                        //     {id: 2, content: 'item 2', start: '2013-04-14'},
                        //     {id: 3, content: 'item 3', start: '2013-04-18'},
                        //     {id: 4, content: 'item 4', start: '2013-04-16', end: '2013-04-19'},
                        //     {id: 5, content: 'item 5', start: '2013-04-25'},
                        //     {id: 6, content: 'item 6', start: '2013-04-27'}
                        // ]);
                        // var options = {};
                        // var timeline = new vis.Timeline(container, data, options);
                        
                        // Feed the input field
                        var data = ['advancedDriverAssistanceSystem', 'antiLockBrakingSystem'];
                        $(".autocomplete").autocomplete({ source: data });
                        
                        var nodes = [
                            {id: 'advancedDriverAssistanceSystem', label: 'Advanced driver assistance systems', shape: 'box', group: 'term'},
                            {id: 'antiLockBrakingSystem', label: 'Anti-lock breaking system', shape: 'box', group: 'term'}
                        ];
                        var edges = [
                            {id: 'advancedDriverAssistanceSystem2antiLockBrakingSystem', from: 'advancedDriverAssistanceSystem', to: 'antiLockBrakingSystem', arrows: 'to', label: 'is instanceOf of'}
                        ];
                        var mainId = 5;
                        var container = document.getElementById('mynetwork');
                        var data = {nodes: nodes,edges: edges};
                        var options = {
                            interaction: {
                                hover: true
                            },
                            edges: {
                                width: 2,
                                arrows: 'to',
                                color: 'gray'
                            },
                            physics: {
                                forceAtlas2Based: {
                                    gravitationalConstant: -26,
                                    centralGravity: 0.005,
                                    springLength: 230,
                                    springConstant: 0.18
                                },
                                maxVelocity: 146,
                                solver: 'forceAtlas2Based',
                                timestep: 0.35,
                                stabilization: {
                                    enabled: true,
                                    iterations: 2000,
                                    updateInterval: 25
                                }
                            },
                            groups: {
                                term: {
                                    radius: 1500,
                                    color: {
                                        border: '#004455',
                                        background: '#5fbcd3',
                                        fontColor: '#ffffff',
                                        hover: {
                                            border: '#004455',
                                            background: '#beebee',
                                            fontColor: '#ffffff'
                                        },
                                        highlight: {
                                            border: '#a5ecfd',
                                            background: '#beeec0',
                                            fontColor: '#ffffff'
                                        }
                                    },
                                    fontSize: 18,
                                    fontFace: 'arial',
                                    shape: 'box'
                                }
                            }
                        };
                        var network = new vis.Network(container, data, options);
                        
                        network.on("stabilizationProgress", function(params) {
                            var maxWidth = 496;
                            var minWidth = 20;
                            var widthFactor = params.iterations/params.total;
                            var width = Math.max(minWidth,maxWidth * widthFactor);document.getElementById('bar').style.width = width + 'px';
                            document.getElementById('text').innerHTML = Math.round(widthFactor * 100) + '%';}
                        );
                        
                        network.once("stabilizationIterationsDone", function() {
                            document.getElementById('text').innerHTML = '100%';
                            document.getElementById('bar').style.width = '496px';
                            document.getElementById('loadingBar').style.opacity = 0;
                            setTimeout(function () {
                                document.getElementById('loadingBar').style.display = 'none';
                            }, 500);
                        });
                        
                        network.on( 'click', function(params) {if (!(params.nodes == 0)) {loadTerm(params.nodes);}});
                        
                        var terms = [
                            {key: 'advancedDriverAssistanceSystem', term: 'Advanced driver assistance systems', definition: 'definition', href: 'advancedDriverAssistanceSystem.html'},
                            {key: 'antiLockBrakingSystem', term: 'Anti-lock breaking system', definition: 'definition'}
                        ];
                    
                        function loadTerm(key) {
                            var result = terms.filter(function(obj) {return obj.key == key;});
                            var node = document.createElement("a");
                            var textnode = document.createTextNode(result[0].term);node['href'] = result[0].href;
                            node['target'] = '_self';
                            node.appendChild(textnode);
                            var termContainer = document.getElementById("t_term");
                            while (termContainer.firstChild) {
                               termContainer.removeChild(termContainer.firstChild);
                           }
                           termContainer.appendChild(node);
                           document.getElementById("t_definition").textContent = result[0].definition;
                       }
                       $(document).ready(function() {
                           var data = ['advancedDriverAssistanceSystem', 'antiLockBrakingSystem'];
                           $(".autocomplete").autocomplete({ source: data });
                       });
                       
                       function termFocus(term) {
                           network.fit();
                           var focusOptions = {
                               scale: 0.7,
                               locked: 'false',
                               animation: {
                                   duration: 10,
                                   easingFunction: 'easeInQuad'
                               }
                           };
                           network.focus(term, focusOptions);
                           network.selectNodes([term])
                       }
                   });
                });
            )
        </script>
    </head>
    <body>
        <div class="body conbody semanticbody">
            <div id="search">
                <div class="form">
                    <div class="form-group row">
                        <label for="search-input" class="col-2 col-form-label">Term Notation</label>
                        <div class="col-10">
                            <input id="search-input" class="form-control autocomplete ui-autocomplete-input" type="text" autocomplete="off" role="textbox" aria-autocomplete="list" aria-haspopup="true"/>
                        </div>
                    </div>
                </div>
                <button type="button" class="btn btn-default" onclick="termFocus($('.autocomplete').val());">Search</button>
            </div>
            <div id="wrapper">
                <div id="mynetwork">
                    <div class="vis-network" style="position: relative; overflow: hidden; touch-action: pan-y; user-select: none; width: 100%; height: 100%;" tabindex="900">
                        <canvas style="position: relative; touch-action: none; user-select: none; width: 100%; height: 100%;" width="958" height="538"/>
                    </div>
                </div>
                <div id="loadingBar" style="opacity: 0; display: none;">
                    <div class="outerBorder">
                        <div id="text">100%</div>
                        <div id="border">
                            <div id="bar" style="width: 496px;"></div>
                        </div>
                    </div>
                </div>
            </div>
           
            <div id="legend">
                <table class="table table-striped table-bordered table-hover table-condensed">
                    <tbody>
                        <tr>
                            <td class="legend_col1">Term</td>
                            <td class="legend_col2"><div id="t_term"><a id="term-link"></a></div></td>
                        </tr>
                        <tr>
                            <td class="legend_col1">Definition</td>
                            <td class="legend_col2">
                                <div id="t_definition"/>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </body>
</html>